Zad 0.1 Lambda
Napisz zwyk³¹ funkcj¹ oraz lambdê (przypisz j¹ do zmiennej) Nastêpnie je wywo³aj:
a) funkcj¹ wypisuj¹ca “Hello World”
b) Funkcja dodaj¹ca dwie liczby do siebie (i zwracaj¹ca j¹)


Zad 0.2
Stwórz wektor 100 kolejnych liczb ca³kowitych z zakresu od 1 do 100
a) Wypisz wszystkie liczby (for_each + unary function)
b) Wypisz wszystkie liczby mniejsze od 0 (for_each + funktor)
c) Nastêpnie policz ile jest liczb wiêkszych ni¿ 4 (count_if + predykat)
d) Zrób to samo dla a, b i c, ale wykorzystaj lambdê
e) W zale¿noœci od zmiennej lokalnej dzielnik wypisz wszystkie liczby podzielne przez
niego (for_each + lambda
f) Zlicz sumê wszystkich liczb parzystych i zapisz j¹ do zmiennej lokalnej int sum;


Zad 0.3
Utwórz wektor liczb ca³kowitych od -100 do 100.
a) Nastêpnie sprawdŸ czy wszystkie liczby s¹ dodatnie.
b) Czy istnieje jakakolwiek liczba podzielna przez 3, 5 i 30.
c) Usuñ z kontenera 0.
d) Nastêpnie sprawdŸ czy kontener nie zawiera wartoœci 0.
e) SprawdŸ czy kontener jest posortowany
f) Skopiuj do drugiego wektora wszystkie liczby wiêksze od 90 i mniejsze od -90
g) Skopiuj do innego wektora 10 kolejnych liczb zaczynaj¹c od 78


1. Napisz funkcjê, która przyjmuje stringa, nastêpnie uszereguje wszystkie litery w porz¹dku alfabetycznym i zwraca tak odwróconego stringa (sort).

2. Napisz analogiczn¹ funkcjê, która zwróci przemieszanego stringa (random_shuffle). Zwróæ uwagê czy za ka¿dym uruchomieniem, faktycznie string jest przemieszany innaczej

3. Napisz funkcjê, która przyjmuje dwa stringi a nastêpnie zwraca vector ich wspólnych liter (powtarzajcych sie w obu stringach).

4. Napisz funkcjê, która usunie spacje z podanego stringa. Zadanie wykonaj na dwóch kontenrach: vector i list (remove i erase) 

5. Napisz funkcjê, która zliczy wyst¹pienia podanej litery w podanym stringu (count).

6. Napisz funkcjê, która sprawdzi czy podany string jest palindromem (reverse i transform lub equal)

7. Napisz funkcjê, która stworzy wektor przechowuj¹cy potêgi kwadratowe z podanego zakresu np od. 3 do 10 (for_each)

8. Zmieñ poprzednie zadanie tak aby zwraca³o sumê kwadratów (accumulate)

9. Napisz funkcjê, która stworzy wektor przechowuj¹cy liczby od 1 do n. Nastêpnie utwórz dwa wektory. Jeden, którzy bêdzie przechowywa³ tylko wielokrotnoœci 2, a drugi tylko wielokrotnoœci 3. Nastêpnie zwróæ vector przechowuj¹cy tylko wielokrotnoœci 2 i 3. (remove_copy_if, set_intersection)

10. Napisz funkcjê, która zwróci wszystkie mo¿liwe permutacje 3 liczb (next_permutation)

11. Napisz funkcjê, która przyjmuje wektor cyfr, a zwraca liczbê permutacji tych cyfr, które s¹ wielokrotnoœci¹ 11.

12. Napisz funkcjê, która zamieni podanego int na vector jej cyfr. 

13. Napisz funkcjê, która znajdzie pierwsz¹ wiêksz¹ liczbê, która jest palindromem od zadanej liczby.



auto squareValueFromRange(int a, int b)
{

	std::vector <int> v;
	while (v.size() <= (b-1))
	{
		for (int i = 0; i <= b; ++i)
		{
			v.push_back(i*i);
			i++;
		}
		return v;
		

	}
//std::for_each(v.begin(), v.end(), [](const int i) {std::cout << i << ", "; });
}